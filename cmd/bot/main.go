package main

import (
	"log"

	"github.com/RZ-ru/Inshakerov_bot/internal/config"
	"github.com/RZ-ru/Inshakerov_bot/internal/db"
	"github.com/RZ-ru/Inshakerov_bot/internal/scraper"
)

func main() {
	// 1Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (.env)
	cfg := config.Load()

	// 2Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ PostgreSQL
	database := db.Connect(cfg.DBUrl)
	if database == nil {
		log.Fatal("‚ùå –û—à–∏–±–∫–∞: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
	}

	defer database.Close()
	log.Println("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

	// 3Ô∏è‚É£ –ê–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∫–æ–∫—Ç–µ–π–ª—è–º–∏
	url := "https://ru.inshaker.com/cocktails"

	// 4Ô∏è‚É£ –ü–∞—Ä—Å–∏–º —Ä–µ—Ü–µ–ø—Ç—ã —Å —Å–∞–π—Ç–∞
	log.Println("üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–∞...")
	cocktails, err := scraper.ParseRecipes(url)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: %v", err)
	}
	log.Printf("üç∏ –ù–∞–π–¥–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: %d", len(cocktails))

	// 5Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	if err := db.SaveRecipes(database, cocktails); err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤: %v", err)
	}
	log.Printf("üßæ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å %d —Ä–µ—Ü–µ–ø—Ç–æ–≤...", len(cocktails))
	if err := db.SaveRecipes(database, cocktails); err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤: %v", err)
	}
	log.Println("‚úÖ –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É!")
}
