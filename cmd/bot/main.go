package main

import (
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"

	"github.com/RZ-ru/Inshakerov_bot/internal/bot"
	"github.com/RZ-ru/Inshakerov_bot/internal/config"
	"github.com/RZ-ru/Inshakerov_bot/internal/db"
)

func main() {
	// 1Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (.env)
	cfg := config.Load()

	// 2Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ PostgreSQL
	database := db.Connect(cfg.DBUrl)
	if database == nil {
		log.Fatal("‚ùå –û—à–∏–±–∫–∞: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
	}
	defer database.Close()
	log.Println("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

	// 3Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram-–±–æ—Ç–∞
	botAPI, err := tgbotapi.NewBotAPI(cfg.BotToken)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: %v", err)
	}
	botAPI.Debug = false
	log.Printf("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ %s", botAPI.Self.UserName)

	// 4Ô∏è‚É£ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := botAPI.GetUpdatesChan(u)

	// 5Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
	for update := range updates {
		if update.Message != nil {
			switch {
			case update.Message.IsCommand():
				switch update.Message.Command() {
				case "start":
					bot.HandleStart(botAPI, update)
				}
			default:
				bot.HandleIngredientInput(botAPI, update, database)
			}
		} else if update.CallbackQuery != nil {
			bot.HandleIngredientConfirm(botAPI, update, database)
			bot.HandleCallback(botAPI, update, database)
		}
	}
}
